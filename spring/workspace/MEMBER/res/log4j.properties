############################
#\uc815\ub9ac#
# - appender : \ub85c\uae45\uc744 \ub0a8\uae38 \uc7a5\uc18c
# - layout : \ub85c\uae45 \ud328\ud134(\ud615\uc2dd)
# - logger : \ub85c\uae45 \ucc98\ub9ac (\uacf5\ud1b5\uc801 \uc758\ubbf8\ub97c \uac00\uc9c4 \ub85c\uadf8 \ubb36\ub294 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9)
# - \ub85c\uadf8 \uc6b0\uc120\uc21c\uc704 : DEBUG < INFO < WARN < ERROR < FATAL
# - \uae30\ubcf8 \ub85c\uae45 \ub4f1\uae09 INFO, \uae30\ubcf8 appender\ub85c \ud45c\uc900 \ucd9c\ub825(System.out)\uacfc rolling \uc0ac\uc6a9
# Logger \uc0ac\uc6a9 \uc608 
# 1) \uac1d\uccb4 \uc0dd\uc131(1) : private static final Logger PARAM_LOGGER = Logger.getLogger("log4jexam.sql.Parameter");
# 2) \uac1d\uccb4 \uc0dd\uc131(2) : private static final Logger RESULT_LOGGER = Logger.getLogger(MemberDaoImpl.class);
# 3) \uc2e4 \uc0ac\uc6a9(1)
#		PARAM_LOGGER.debug("\u2605\u2605Service \ud30c\ub77c\ubbf8\ud130\u2605\u2605 : "
#				+ "[" 	+ mv.getMemId() + ", "
#				+ mv.getMemName() + ", "
#				+ mv.getMemTel() + ", "
#				+ mv.getMemAddr() + "]"
#				); // smc \ucc0d\uae30 \uac00\ub2a5 => \uc8fc\uc18c \uac12 \ubc18\ud658\ub428.
# 4) \uc2e4 \uc0ac\uc6a9(2)
#	    RESULT_LOGGER.debug("\u2605\u2605Service \uacb0\uacfc\u2605\u2605 [true:DB\uc5d0 \uac12\uc774 \uc874\uc7ac\ud568,false:DB\uc5d0 \uac12\uc774 \uc5c6\uc74c] : " + chk);
############################

# rootLogger : \ub514\ud3f4\ud2b8 \uc124\uc815
# - stdout : \uc784\uc758\ub85c \ub9cc\ub4e0 String \uac12
# ex) rootLogger=ERROR ==> ERROR, FATAL \ub85c\uadf8 \ud655\uc778
log4j.rootLogger=DEBUG, stdout   
                
# Appender \uc885\ub958(ConsoleAppender, FileAppender, JDBCAppender, JMSAppender, SMTPAppender, SocketAppender, SyslogAppender \ub4f1)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# The target may be a console, a file, or another item depending on the appender.
log4j.appender.stdout.Target=System.out
# Layout \uc885\ub958(DateLayout, HTMLLayout, PatternLayout, SimpleLayout, XMLLayout)
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# \ucd9c\ub825 \ud615\uc2dd \uc815\uc758
# \ub85c\uae45\ub4f1\uae09 \ud074\ub798\uc2a4\uba85.\ub85c\uadf8\uba54\uc18c\ub4dc\uba85:\ub77c\uc778\uc218 - \uba54\uc2dc\uc9c0
log4j.appender.stdout.layout.ConversionPattern=%5p %C{1}.%M:%L - %m%n  

# SqlMap logging configuration... ==> \ud328\ud0a4\uc9c0\ub098 \ub85c\uac70\uc774\ub984\ubcc4\ub85c \ub85c\uae45\uc744 \uac78\uace0 \uc2f6\uc744\ub54c
#log4j.logger.[logger-name]=level, appender1,appender..n



## \ub85c\uadf8 \uc0ac\uc6a9 \uc2dc \uc0ac\uc6a9\ud560 \ud074\ub798\uc2a4\uc5d0\uc11c [RESULT_LOGGER.debug("\u2605\u2605\uacb0\uacfc\u2605\u2605 : " + cnt);] \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ud558\uba74 \ub428.
#############################################
# log4j\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud574\uc8fc\ub294 \ub85c\uadf8\ub4e4 : 
# [DEBUG] (Preparing statement, Execution Statement) SQL \ubb38, 
# \ud30c\ub77c\ubbf8\ud130
# \ud30c\ub77c\ubbf8\ud130 \ud0c0\uc785
# Header(DB \uceec\ub7fc\uba85)
# DB \ucc98\ub9ac \uacb0\uacfc
# Create Connection
# Resutned Connection
#############################################
                     
